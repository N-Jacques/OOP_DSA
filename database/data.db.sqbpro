<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/Users/nbr/Projects/GitHub/OOP_DSA/database/data.db" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><current_tab id="0"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="2453"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="sqlite_sequence"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="sqlite_sequence" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">-- Address Table
CREATE TABLE Address (
    address_id INTEGER PRIMARY KEY AUTOINCREMENT,
    street_name TEXT NOT NULL,
    house_number TEXT NOT NULL,
    room_number TEXT,
    city TEXT NOT NULL,
    region TEXT,
    country TEXT NOT NULL
);

-- User Table 
CREATE TABLE User (
    user_id INTEGER PRIMARY KEY AUTOINCREMENT,
    first_name TEXT NOT NULL,
    last_name TEXT NOT NULL,
    username TEXT UNIQUE NOT NULL,
    password TEXT NOT NULL,
    phone_number TEXT NOT NULL,
    address_id INTEGER NOT NULL,
    FOREIGN KEY (address_id) REFERENCES Address(address_id)
);

-- Checkout Table 
CREATE TABLE Checkout (
    checkout_id INTEGER PRIMARY KEY AUTOINCREMENT,
    cart_id INTEGER NOT NULL,
    address_id INTEGER NOT NULL,
    payment_method TEXT NOT NULL,
    total_due REAL NOT NULL,
    FOREIGN KEY (cart_id) REFERENCES Cart(cart_id),
    FOREIGN KEY (address_id) REFERENCES Address(address_id)
);

-- Orders Table 
CREATE TABLE Orders (
    order_id INTEGER PRIMARY KEY AUTOINCREMENT,
    cart_id INTEGER NOT NULL,
    order_date TEXT NOT NULL,
    order_status TEXT CHECK(order_status IN ('Pending', 'Shipped', 'Delivered', 'Canceled')),
    amount_paid REAL NOT NULL,
    address_id INTEGER NOT NULL,
    FOREIGN KEY (cart_id) REFERENCES Cart(cart_id),
    FOREIGN KEY (address_id) REFERENCES Address(address_id)
);

-- Products Table
CREATE TABLE Products (
    product_id 
)
</sql><current_tab id="0"/></tab_sql></sqlb_project>
